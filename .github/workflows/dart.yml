name: Run Tests

on: push

jobs:
  build:

    name: "${{ matrix.bot }} (${{ matrix.dart-version }}/${{ matrix.code-version }}/${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node-version: [10]
        dart-version: [stable, dev]
        # for now, code-version will mirror dart-version to reduce number of bots
        # code-version: [stable] #, insiders]
        bot: [flutter_debug, flutter_debug_chrome, flutter_test_debug, dart_web_debug, flutter_repo, dart_debug, dart, flutter, misc]
        include:
          - dart-version: stable
            flutter-version: beta
            code-version: stable
          - dart-version: dev
            flutter-version: dev
            code-version: insiders

    steps:

      - uses: actions/checkout@v1

      - name: Setup XVFB
        if: matrix.os == 'ubuntu-latest'
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Setup Chrome
        if: matrix.os == 'macOS-latest'
        run: brew update && brew cask install google-chrome
        
      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Dart ${{ matrix.dart-version }}
        uses: DanTup/gh-actions/setup-dart@master
        with:
          channel: ${{ matrix.dart-version }}

      - name: Setup Flutter ${{ matrix.flutter-version }}
        uses: DanTup/gh-actions/setup-flutter@master
      
      - run: flutter update-packages
        if: matrix.bot == 'flutter_repo'

      - name: Print Dart version
        run: dart --version

      - name: Print Flutter version
        if: "!startsWith(matrix.bot, 'dart')"
        run: flutter --version

      - name: Enable Flutter web support
        if: "startsWith(matrix.bot, 'flutter')"
        run: flutter config --enable-web

      - run: |
          pub global activate --no-executables devtools
          pub global activate --no-executables webdev
          pub global activate --no-executables stagehand
          pub global activate --no-executables args 1.5.0
          pub global activate --no-executables meta 1.1.6
          pub global activate --no-executables pedantic 1.4.0
          pub global activate --no-executables json_annotation 1.2.0
        shell: pwsh
      - name: npm ci
        run: npm ci
        
      - name: npm lint
        run: npm run lint
          
      - name: npm build
        run: npm run build

      - name: npm test
        run: npm test
        env:
          CI: true
          ELECTRON_NO_ATTACH_CONSOLE: 1
          DISPLAY: ":99.0"
          BOT: ${{ matrix.bot }}
          CODE_VERSION: ${{ matrix.code-version }}
          DART_VERSION: ${{ matrix.dart-version }}
          FLUTTER_VERSION: ${{ matrix.flutter-version }}
          LOGS_NAME: ${{ matrix.dart-version }}_${{ matrix.code-version }}
          FLUTTER_REPO_PATH: ${{ steps.flutter.outputs.flutter-sdk }}

      - name: Store logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-logs-${{ matrix.os }}
          path: .dart_code_test_logs

      - name: Store test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: .test_results

      - name: Store coverage
        uses: actions/upload-artifact@v1
        if: success() && matrix.dart-version == 'stable' && matrix.code-version == 'stable'
        with:
          name: coverage-${{ matrix.os }}
          path: coverage
